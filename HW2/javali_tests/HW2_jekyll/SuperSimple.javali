class Main {
    int a,b;

    void method(int a, int b) {
        // primitive type declarations
        int c, d;
        boolean e;

        // reference type declarations
        list f;
        int[] g;
        boolean[] h;
        list[] i;

        // assignment statements
        c = 0;
//        d = c + 1;
        e = read();

        // method calls
        f(b, c);
        a = g(a);
        c = e.d();
        b.h();
        e = f.g;
        a = b[9];

        // if statement
        if (true) {
            f = 300;
        }

        if (false) {
        } else {
        }

        // while statements
        while (false) {
            g = h;
        }

        // write statements
        write(24);
        writeln();
    }

    int method2(boolean a, point[] b) {
        // newExpressions
        a = new f();
        f = new g[5];
        g = new int[a];

        // return statement
        return 1;
    }

    boolean[] method3(int[] a) {
    }

    void main() {
        // unary operators
        a = +b;
        a = -b;
        f = !g;

        // casts
        i0 = (list) b;
        i1 = (point[]) -3;
        i2 = (int[]) true;

        // mult
        i3 = i0 * a;
        i4 = b / 4;
        i5 = z % 2;

        // return statement without return value
        return;
    }
}

class Base {
}

// inheritance
class Extends extends Base {
}